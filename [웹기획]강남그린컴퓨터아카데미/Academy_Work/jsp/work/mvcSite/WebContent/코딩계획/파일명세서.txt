공지사항
 - 정보             : NoticeInfo
 - 컨트롤러          : NoticCtrl.java    - *.ntc(매핑)
 - 목록(brd_list.ntc)    : notice_list.jsp, NoticeListAction, NoticeListSvc
 - 보기(brd_view.ntc)    : notice_view.jap, NoticeViewAction, NoticeViewSvc
 - 폼(brd_form.ntc)      : notice_form.jsp, NoticeFormAction, NoticeFormSvc
 - 처리(brd_proc.ntc)    : NoticeProcAction, NoticeProcSvc
 - DB                : NoticeDao

 - 사용자 요청 > NoticeCtrl > Notice~Action > Notice~Svc > Notice~Dao


[공지사항]
   1. ctrl : 컨트롤러 (서블릿)
   2. vo : NoticeInfo
   3. ctrl : url(파일명)을 가져와 해당 페이지의 각 Action 연결
   4. action : NoticeListAction
            - NoticeListSvc 호출
   5. svc : NoticeListSvc
   6. dao : NoticeDao

=============================================================================

회원-회원가입, 정보수정, 회원탈퇴
 - 정보                			: MemberInfo
 - 컨트롤러             		: MemberCtrl - *.mem(매핑)
 - 가입(join_form.jsp) 	: DupIDCtrl, DupIDSvc (이동하는거 없음 action 없이 바로 서비스 생성 가능), DupIDDao
 - 수정(mypage.mem)   	: mypage.jsp, MemberUpdateAct (, 회원정보를 세션에 담았기 때문에 SVC 불필요)
 - 처리(proc.mem)        : MemberProcAct, MemberProcSvc
 - DB                  	: MemberDao
 
 [가입] : 사용자가 입력한 데이터들을 받아서 DB에 insert
 [수정] : 사용자가 입력한 데이터들을 받아서 해당 회원의 DB에서 update
 [탈퇴] : DB에서 해당 회원의 mi_isactive 컬럼의 값을 'n'으로 update

  - 사용자 요청 > NoticeCtrl > Notice~Action > Notice~Svc > Notice~Dao
  
=============================================================================

상품(프론트) : 목록(검색조건), 상세보기(옵션선택, 수량, 후기, 관련상품)

 - 정보            : ProductInfo, CataBigInfo, CataSmallInfo, BrandInfo
 - 컨트롤러       : ProductCtrl - *.pdt(매핑)
 - 목록 (pdt_list.pdt) : pdt_list.jsp, PdtListAct, PdtListSvc
 - 보기 (pdt_view.pdt) : pdt_view.jsp, PdtViewAct, PdtViewSvc
 - DB : ProductDao

=============================================================================

주문(프론트) : 장바구니(입력, 수정, 삭제), 결제화면(배송지, 결제 정보), 결제처리(insert)
 - 정보 : ProductInfo, CartInfo
 - OrderCtl - *.ord, 
 - 장바구니 화면(cart_list.ord) : cart_list.jsp, CartListAct, CartListSvc
 - 장바구니 담기 처리(cartProc.ord) : CartInProcAct, CartInProcSvc 
 - 장바구니 수정 처리(cartProc.ord) : CartUpProcAct, CartUpProcSvc 
 - 장바구니 삭제 처리(cartProc.ord) : CartDelProcAct, CartDelProcSvc 
 - 결제 화면(order_form.ord) : order_form.jsp, OrderformAct, OrderFormSvc
 - 결제 처리(order_proc.ord) : OrderProcAct, OrderProcSvc 
 - DB : OrderDao

=============================================================================

어드민
index.jsp : 어드민의 각 메뉴에 링크연결
login_form.jsp : 어드민 모드의 로그인 폼 
logout.jsp : 어드민 모드의 로그아웃 

=============================================================================

ID 중복 체크
1. 사용자가 입력한 값을 서버로 전송
2. 서버로 보낸 값을 받아 DB 에서 중복체크 쿼리 실행
3. 쿼리 실행결과에 따라 중복여부를 사용자에게 알려줌
4. 모든 작업은 사용자가 알아차리지 못하게 동작됨(새로고침 없이 동작한다는 의미)


장바구니 담기
1. 선택한 상품과 옵션, 수량 등의 데이터를 장바구니 테이블에 등록 

