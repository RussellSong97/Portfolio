객체 (Object)
 - 객체는 속성(property)과 메소드(method)로 구성되어 있음
 	속성 : 객체를 특징 지어주는 값 - 일종의 변수
	 - 문법 : 객체명.속성명 = 넣을 값;	변수명 = 객체명.속성명;
	메소드 : 객체로 할 수 있는 작업 - 일종의 함수
	 - 문법 : 객체명.메소드명();
 - 자바스크립트는 내장 객체와 사용자 정의 객체로 나뉘어져 있음 

내장 객체
 - 자바스크립트가 기본적으로 제공하는 객체

1. Array 객체 
 - 배열 객체로서 배열에 여러 가지 속성과 메소드를 제공함
 - 실제 배열을 객체로 하여 사용할 수 있음
 - 속성
 	length : 배열의 크기(길이)로 배열의 마지막 인덱스 +1의 값

 - 메소드
  1) toString(), join()
	- 배열 안에 있는 데이터들을 연결하여 문자열로 변환시키는 메소드
	- toString()은 쉼표로 각 요소 값을 구분지어 연결함
	- join()은 각 요소 값을 구분지을 구분자를 인수로 입력받음 - 구분자가 없으면 쉼표로 구분

  2) concat()
	- 2개 이상의 배열을 하나의 배열로 묶어주는 메소드
	- 문법 : 배열명.concat(합칠 배열1 [, 합칠 배열2, 합칠 배열3, ..., 합칠 배열n]);

  3) push(), pop()
	- 배열의 끝에 새로운 요소를 추가하거나(push()), 삭제(pop())할 때 사용
	- 문법 : 배열명.push(추가할 요소(들));	배열명.pop();

  4) indexOf()
	- 배열에서 특정 값의 위치 인덱스를 구할 때 사용
	- 문법 : 배열명.indexOf(찾는 값 [, 시작 인덱스]);
	- 찾는 값이 2개 이상일 경우 첫번째 위치를 구함 - 두 번째 이상의 위치를 찾으려면 '시작 인덱스' 인수를 사용

  5) shift(), unshift()
    - push()와 pop()과는 반대로 배열의 앞부분에 적용되는 메소드
	- 문법1 : 배열명.shift(); -> 해당 배열의 첫 요소가 삭제
	- 문법2 : 배열명.unshift(추가할 값1[, 추가할 값2, ...]); -> 지정한 값(들)을 해당 배열의 앞부분에 끼워넣음 

  6) splice()
  	- 지정한 요소들을 배열에서 삭제하는 메소드(삭제 후 추가할 수도 있음)
	- 문법 : 배열명.splice(시작 인덱스, 삭제할 개수 [, 대체할 값1, ...]);

  7) slice()
  	- 지정한 인덱스에 맞춰 배열의 일부를 잘라내어 새로운 배열로 생성시킴
	- 문법 : 배열명.slice(시작 인덱스 [, 종료 인덱스 - 1]);
	- 잘라낸 요소들로 새로운 배열을 만들고 원본은 그대로 유지됨

  8) sort()
  	- 배열의 요소들을 코드값을 기준으로 오름차순 정렬시키는 메소드
	- 문법 : 배열명.sort();
	- 정렬 후 배열의 순서도 바뀌게 됨

  9) reverse()
  	- 배열의 요소들을 코드값을 기준으로 내림차순 정렬시키는 메소드
	- 문법 : 배열명.reverse();
	- 정렬 후 배열의 순서도 바뀌게 됨

 10) delete 연산자
 	- 메소드는 아니나 특정 요소를 삭제하는 기능으로 요소의 자리는 유지함
	- 문법 : delete 배열명[삭제할 요소의 인덱스]; 


2. String 객체
 - 문자열 객체로 문자열을 추출하거나 조작, 검색하는 등의 기능을 제공함
 - 큰 따옴표나 작은 따옴표의 구분 없이 모두 문자열로 취급함 - 자바에서는 큰 따옴표만 인정
 - 객체 생성법
 	var 객체명 = new String("문자열"); 또는 var 객체명 = "문자열";
		대부분 두번재 방법으로 작업함
 - 가장 많이 사용하는 메소드들이 있는 객체

 - 속성
 	length : 문자열 내의 문자 개수

 - 메소드

1) indexOf(), search(), lastIndexOf()
 - 둘 다 문자열에서 특정 문자열을 찾아 인덱스 번호를 리턴하는 메소드
 - 문법1 : 문자열.indexOf("찾는 문자열" [, 시작 위치])
 - 문법2 : 문자열.search("찾는 문자열");
 - 문법3 : 문자열.lastIndexOf("찾는 문자열" [, 시작 위치])
 - indexOf()와 search(), lastIndexOf() 모두 찾는 값이 없을 경우 -1을 리턴
 - 특정 문자열이 존재하는 지 여부를 판단하는데에도 사용됨
 - lastIndexOf()는 뒤에서부터 찾기 시작하는 메소드로 마지막 위치를 필요로 할 때 사용

2) charAt(), charCode()
 - 문자열에서 특정 위치의 문자를 추출하거나 유니코드값을 리턴하는 메소드
 - 문법1 : 문자열.charAt(인덱스) : 문자열에서 지정한 인덱스가 있는 글자를 리턴
 - 문법2 : 문자열.charCodeAt(인덱스) : 문자열에서 지정한 인덱스가에 있는 글자의 유니코드 값을 리턴 
 - 인덱스 범위를 벗어나면 charAt()은 빈 문자열을 charCodeAt()은 NaN를 리턴

3) slice(), substring(), substr() 
 - 문자열의 일부를 잘라내어 리턴하는 메소드
 - 문법1 : 문자열.slice(n[, m]) : 문자열을 n부터 m-1까지 잘라내어 리턴(m이 없으면 끝까지 잘라냄)
 - 문법2 : 문자열.substring(n[, m]) : 문자열을 n부터 m-1까지 잘라내어 리턴(m이 없으면 끝까지 잘라냄)
 - 문법3 : 문자열.substr(n[, m]) : 문자열을 n부터  m개의 문자를 잘라내어 리턴(m이 없으면 끝까지 잘라냄)
 - 자바에서는 substring()메소드만 존재하므로 substring()을 사용하는 것이 좋다
 - 세 메소드 모두 하나의 매게변수만 사용하면 지정한 인덱스부터 끝까지 잘라냄

4) toLowerCase(), toUpperCase()
 - 문자열을 각각 소문자와 대문자로 변환시키는 메소드
 - 문법1 : 문자열.toLowerCase() : 문자열 중 영문 대문자를 소문자로 변경
 - 문법2 : 문자열.toUpperCase() : 문자열 중 영문 소문자를 대문자로 변경

5) replace()
 - 특정 문자열를 찾아 지정한 문자열로 변경하여 새로운 문자열로 리턴하는 메소드
 - 문법 : 문자열.replace("찾는 문자열", "바꿀 문자열");
 - 원본은 변하지 않음

6) split()
 - 문자열을 지정한 구분자를 기준으로 배열로 리턴하는 메소드
 - 문법 : 문자열.split("구분자")

7) match()
 - 지정한 문자열을 찾아 있으면 리턴 없으면 null을 리턴
 - 문법 : 문자열.match("찾는 문자열")

3. Date 객체
 - 자바스크립트에서 사용하는 날짜/시간 관련 객체로 문자열이나 숫자로도 표현가능
	숫자 표현은 1970-01-01 0시 0분 0초부터 밀리초로 계산된 시간값을 의미
 - 자바스크립트는 기본적으로 밀리초가 기준이 됨

 - 객체 생성
 new Date() : 오늘 날짜 및 현재 시간으로 Date객체 생성
 new Date(year, month, day) : 지정한 연월일로 Date 객체 생성
 new Date(year, month, day, hour, minute, second, millisecond) : 지정한 연월일시분초로 Date 객체 생성

 - 메소드
1) get 메소드 : 날짜 및 시간 데이터에서 원하는 데이터만 추출하는 메소드들
 - getDate() : 일(day 1~31) 부분 추출
 - getDay() : 요일(0~6 0이 일요일) 부분 추출
 - getFullYear() : 연도를 4자리 숫자로 추출
 - getHours() : 시간(0~23)을 24시간제로 추출
 - getMilliseconds() : 밀리초를 추출
 - getMinutes() : 분(0~59) 부분 추출
 - getMonth() : 월(0~11) 부분 추출
 - getSeconds() : 초(0~59) 부분 추출
 - getTime() : 1970-01-01 0시 0분 0초 부터 밀리 초로 계산된 시간값

2) set 메소드 : 날짜 및 시간 데이터에서 원하는 데이터만 지정하는 메소드들
 - setDate() : 일(day 1~31) 부분 변경
 - setFullYear() : 연도를 4자리 숫자로 변경
 - setHours() : 시간(0~23)을 24시간제로 변경
 - setMilliseconds() : 밀리초를 변경
 - setMinutes() : 분(0~59) 부분 변경
 - setMonth() : 월(0~11) 부분 변경
 - setSeconds() : 초(0~59) 부분 변경
 - setTime() : 1970-01-01 0시 0분 0초 부터 밀리 초로 계산된 시간값 변경

Math 객체
 - 숫자에 대한 수학적 작업을 위한 객체
 - 객체 생성 후 메소드를 사용하는 타 객체와는 달리 Math.메소드명() 의 형식으로 사용하면 됨
 - 메소드
abs(X) : 지정한 숫자의 절대값 리턴
ceil(x) : 지정한 숫자를 올림
floor(x) : 지정한 숫자를 내림
max(x1, x2, ... , xn) : ㅊ지정된 숫자들 중 최대값 리턴
min(x1, x2, ... , xn) : ㅊ지정된 숫자들 중 최소값 리턴
pow(x, y) : x의 y승
random() : 0이상 1미만의 난수 리턴
round(x) : 지정한 숫자를 반올림