인덱스(index)
 - 검색속도 향상을 위해 사용하는 기능으로 검색이 이루어지는 특정 컬럼에 부착하여 사용함

 - 장점
	검색속도가 아주 빨라짐(단, 항상 그런것은 아님)
	속도가 빨라지므로 쿼리의 실행시간이 줄어들어 전체 시스템(사이트)의 성능이 향상됨

 - 단점
	인덱스가 데이터베이스의 공간을 일정부분 차지하게 되어 데이터베이스의 전체 크기가 커짐
	 - 일반적으로 데이터베이스 크기의 10% 정도 추가공간이 필요하게 됨
	처음 인덱스를 생성하는데 시간이 많이 소요될 수 있다(기존의 데이터가 많을 경우)
	데이터의 변경 작업(insert, update, delete)이 자주 일어날 경우 오히려 성능이 많이 나빠질 수도 있음

 - 인덱스는 클러스터 인덱스(clustered index)와 보조 인덱스(secondary index)로 나뉨
	다른 DBMS에서는 보조 인덱스를 비클러스터 인덱스(non clustered index)라고 함

 - 클러스터 인덱스는 테이블당 하나만 생성이 가능하며, 보조 인덱스는 여러 개를 생성할 수 있음

 - 클러스터 인덱스는 거의 primary key와 동일한 의미로 사용됨
	show index from 테이블명 의 명령으로 인덱스 상황을 볼 수 있음

 - 기본적으로 테이블의 데이터들은 primary key로 지정된 컬럼의 값에 따라 오름차순으로 정렬되어 출력됨 : 클러스터 인덱스의 특징

 - 보조 인덱스는 특정 컬럼에 unique 제약조건을 걸어주면 생성됨(여러 개 생성 가능)
	보조 인덱스가 걸린 컬럼에 not null 제약조건을 추가하면 자동으로 클러스터 인덱스로 지정됨
	단, 정렬은 여전히 primary key를 기준으로 정렬됨
	primary key가 있는 상태에서는 보조 인덱스에 not null을 걸어도 primary key가 우선적으로 클러스터 인덱스로 지정됨

인덱스를 생성하거나 생성하지 않아야 하는 경우
 - where절에서 조건으로 사용되는 컬럼에는 인덱스를 걸어주는 것이 좋다.
	단, 자주 사용되어야 그 가치가 있음

 - 데이터의 중복도가 높은 컬럼은 인덱스를 만들어도 효과가 없다.

 - 외래키를 지정한 컬럼에는 인덱스가 자동으로 생성된다.

 - Join에 자주 사용되는 컬럼에는 인댁스를 생성해 주는 것이 좋다.

 - insert/update/delete 가 얼마나 자주 일어나는지 고려해야 한다.
	자주 일어나면 인덱스를 생성하는 것이 오히려 속도저하를 가져올 수도 있음

 - 클러스터 인덱스가 아예 없는 것이 좋은 경우도 있다.
	PK를 지정하지 않고 보조 인덱스에도 not null을 지정하지 않으면 클러스터 인덱스가 없는 상태로 테이블이 생성됨
	insert/update/delete 가 자주 일어나는 테이블일 경우 PK가 아예 없는 것이 나을 수도 있음
	(쇼핑몰 등의 이벤트 시행시 갑자기 회원이 몰리는 등의 상황)

 - 자주 사용되니 않는 인덱스는 제거하는 것이 좋다.

인덱스 생성
create index 인덱스이름 on 테이블명(인덱스를 붙일 컬럼명);

인덱스 삭제
drop index 인덱스이름 on 테이블명




