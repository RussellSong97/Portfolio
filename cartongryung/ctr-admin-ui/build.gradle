buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com'
version = '1.0.0'

java {
	sourceCompatibility = '17'
}

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
	mavenCentral()
}

dependencies {
    // firebase
    implementation 'com.google.firebase:firebase-admin:9.3.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

    // Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 썸네일
    implementation 'net.coobird:thumbnailator:0.4.1'

    // excel
    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.2'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.2.2'

    // 외부 api
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // OkHttp 라이브러리 추가
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    implementation 'org.json:json:20210307'

    // Swagger configuration
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    runtimeOnly 'com.github.therapi:therapi-runtime-javadoc:0.15.0'
    annotationProcessor 'com.github.therapi:therapi-runtime-javadoc-scribe:0.15.0'

}

// [3] Querydsl 설정부
def generated = 'src/main/generated'

// [4] querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
    options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

// [5] java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// [6] gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

sourceSets {
    main.resources.excludes = [ 'static/**/*.html', 'static/images/**' ]
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
    enabled = false
}

javadoc {
    options {
        encoding = 'UTF-8'          // Java 소스 파일의 인코딩
        charSet = 'UTF-8'           // 생성된 HTML 파일의 문자 인코딩
        docEncoding = 'UTF-8'       // JavaDoc의 출력 인코딩
        locale = 'ko_KR'            // JavaDoc 생성 시 사용할 로케일 설정
    }
}
