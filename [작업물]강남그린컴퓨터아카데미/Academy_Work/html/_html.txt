HTML(HyperText Markup Language)
 - 웹 브라우저에서 해석하여 보여주는 언어로 웹의 기본이 됨
 - 1990년대에 4.0이 2010년대에 5.0이 발표됨
 - 문법이 타 언어들에 비해 느슨한 편으로 오류가 발생하지 않고, 오동작을 하게 됨
 - 태그라는 명령어들의 집합으로 <태그명> ~ </태그명>의 태그 쌍으로 이루어져 있음

XML(eXtensible Markup Language)
 - 웹상에서 구조화된 문서나 데이터를 전송할 수 있게 설계된 표준화된 텍스트
 - 주로 데이터의 저장이나 전송 등에 사용됨
 - 데이터를 전송해야 하므로 데이터들의 입력형식을 상당히 까다롭게 검사하는 방식

XHTML(eXtensible HyperText Markup Language)
 - HTML에 XML이 가진 특성 중 문법에 대한 특성을 가미한 것
 - XHTML1.0은 HTML4.0과 거의 같으나 문법 오류를 표시하는 것에서 차이가 있음


웹 표준화(Web Standard)
 - 2000년대 초반 발표된 XHTML을 기반으로 웹에서 사용되는 언어들을 표준화하여 지키자는 운동
 - 모든 사이트가 모든 브라우저에서 동일하게 보이고, 동일하게 동작되게 하자는 의미
 	단, 브라우저 별로 다르게 보이는 부분(컨트롤 등)은 어쩔 수 없음
 - 모든 사용자(시각장애인 포함)들이 웹 사이트를 편하게 사용하도록 하자는 의미도 포함
	시각장애인 전용 리더기로 사이트의 내용을 읽어줄 수 있음
	단, html태그를 정확하게 웹 표준에 맞게 사용해야 리더기가 정확하게 읽어줄 수 있음
 - 웹 표준의 기본은 의미있는 태그를 사용하자 임


태그(tag)
 - html명령어로 특별한 경우가 아니면 무조건 영문 소문자로 입력함
 - "<"로 시작하여 ">"로 끝나는 html의 명령어로 보통 여는 태그와 닫는 태그로 구분됨
	예) <태그명>...</태그명>
	단, 몇몇의 태그는 닫는 태그가 따로 없어서 하나의 태그에서 열고 닫는 기능까지 구현
	예) <태그명 />
 - 대부분의 태그는 속성을 가지고 있어 태그에 여러가지 기능을 부여할 수 있음
 - 태그 및 속성 사용문법
 	<태그명 속성명1="값1" 속성명2="값2" ... 속성명n="값n">
	속성값은 반드시 큰 따옴표로 묶어서 사용함
 - 태그가 차지하는 위치에 따른 종류
 	인라인 요소(inline element) : 태그를 사용해도 줄이 바뀌지 않는 태그들을 의미
	 - 인라인 요소 안에서는 블록 요소를 사용할 수 없음
	 - 인라인 요소 안에서 인라인 요소는 사용할 수 있음
	블록 요소(block element) : 태그를 사용하면 다음 내용은 다음 줄로 내려가게 하는 태그들을 의미
	 - 독립적인 형태의 상자(box)를 의미하며 블록요소와 블록요소 사이에는 약간의 여백이 존재하며 그 여백은 브라우저마다 조금씩 다를 수 있음(CSS로 여백을 동일하게 조절해야 함)
	 - 블록 요소 안에서는 인라인 요소 뿐만 아니라 블록 요소도 사용할 수 있음
 - html 문서의 확장자는 "html" 또는 "htm" 중 하나를 사용하면 되며, 보통 "html"을 사용
 - html 문서내에서는 띄어쓰기는 한 번만 적용되며(여러 번 띄워도 한 번의 띄어쓰기만 적용됨) 여러 번을 띄우고 싶으면 &nbsp; 를 사용해야 함
 - html 문서내에서 엔터는 한 번의 띄어쓰기로 해석되며 다음 줄로 내리려면 <br /> 태그 사용


공용태그
1. <html> 태그
 - html 문서의 시작과 끝을 의미하는 태그
 - <html>부터 </html>까지가 하나의 웹문서이나 범위 밖에서 입력해도 동작함
 - 모든 태그들은 기본적으로 <html>태그 내부에 위치해야 함
 - <html> 태그 내부에는 <head>와 <body> 두 개의 태그가 존재함

2. <head> 태그
 - 해당 문서의 윗부분에 존재하며 화면에 보이는 것보다 보이지 않는 작업이 더 많음
 - 검색을 용이하기 하거나 문서에 대한 설명이나 정보를 입력하는 <meta>태그
 - 제목 표시줄에 특정 글자를 보여주는 <title>태그
 - 스타일 시트를 정의하거나 불러오는 <style>태그
 - 자바 스크립트를 정의하거나 불러오는 <script>태그
 - <style>이나 <script> 모두 <head>가 아닌 <body>태그 안에서도 사용할 수 있으나 보통은 보기 편하기 위해 <head>태그 안에 입력함
 	경우에 따라 <script>등은 너무 많은 양의 코드가 있으면 <body>의 아랫쪽에 입력하기도 함

3. <body> 태그
 - 웹 브라우저에서 실제로 사용자에게 보여질 부분에 대한 영역으로 대부분의 작업이 이뤄지는 곳
 - 기본적으로 여백을 가지고 있어 사이트의 컨텐츠가 브라우저에 딱 붙지 않게 해줌
 	단, 보통 스타일 시트로 여백을 제거한 후 사용하게 됨

4. <div> 태그
 - 대표적인 블록 요소로 화면의 분할이나 나눔 등의 의미로 사용
 - 웹 표준 대두 후 레이아웃 구현 시 많이 사용됨
 - 주로 블록 요소들을 그룹화하기 위해 사용되며 id와 class속성으로 구분하여 사용함

5. <p> 태그
 - 문단을 의미하는 태그로 div와 함께 가장 많이 쓰이는 블록 요소
 - 주로 많은 양의 글자를 처리할 때 사용됨

6. <span> 태그
 - 인라인 그룹화 태그로 주로 인라인 요소들을 그룹화 할 때 사용됨
 - 인라인 요소이므로 블록요소(div, p, ul, ol, hx 등)를 포함할 수 없음


공용속성
 - 대부분의 태그에서 사용할 수 있는 속성으로 보통 범위를 갖는 태그에서 사용됨
 	범위를 갖는 태그 : 닫는 태그가 따로 있는 태그들과 img, input 태그등을 의미

 - title 속성 : 해당 범위에 마우스를 올렸을 때 툴팁처럼 문자열을 잠깐 보여주는 기능

 - style 속성 : 해당 태그의 범위에 스타일을 직접 지정하는 속성

 - name 속성 : 해당 태그에 특정 이름을 부여하여 css나 js에서 구분자로 사용
 	주로 폼태그내의 컨트롤의 이름으로 많이 사용되며 동일한 이름이 있으면 배열로 인식
	보통 개발자가 지정하는 경우가 많음

 - class 속성 : 해당 태그의 범위에 특정 class명을 부여하여 css나 js에서 구분자로 사용
 	class 속성은 한 페이지내에서 동일한 값이 여러 개 존재해도 상관없음
	같은 class명을 가진 범위들을 하나로 묶어주는 역할을 함
	여러 개의 class명을 띄어쓰기로 구분하여 여러 개의 class로 지정해도 됨
	각기 다른 태그에 동일한 class명을 부여해도 됨
	보통 디자이너(퍼블리셔)가 지정하는 경우가 많음

 - id 속성 : 해당 태그의 범위에 특정 class명을 부여하여 css나 js에서 구분자로 사용 
	id 속성은 한 페이지내에서 유일한 값이어야 함
	유일한 값이어야 하지만 동일한 값이 존재해도 오류가 발생하진 않음
	보통 디자이너가 지정하는 경우가 많으나, 경우에 따라 개발자가 짓는 경우도 있음


주석
 - 코드에 대한 설명으로 사용자에겐 보이지 않고 소스를 봤을 때만 보이는 기능
 - 일반적으로 html에서의 주석은 화면 ui의 위치를 나타내는데 많이 사용됨
 - html에서의 주석은 "<!--" 부터 "-->" 까지를 주석으로 취급함(여러 줄 허용)


html에서의 색상값(css와 js에서도 동일하게 사용됨)
 - 영문으로된 색상명 : white, black, red, lightgreen, pink 등
 - 또는 총 6자리의 16진수로 된 RGB값으로 각 색상별로 두자리씩 표현
	예) #000000 -> 검정, #ff0000 -> 빨강, #00ff00 -> 녹색, #ffffff : 하얀색
	#은 붙이지 않아도 동작되나 css등에서는 동작하지 않을 수도 있으므로 반드시 붙여서 사용